{"version":3,"sources":["components/FilterName/FilterName.module.css","components/ContactsList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/FilterName/FilterName.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/data/data.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactForm","contact","onSubmit","useState","number","setNumber","name","setName","handleChange","e","target","value","className","s","form","preventDefault","some","item","toLowerCase","alert","label","pattern","title","required","type","placeholder","onChange","addButton","FilterName","ContactItem","onDelete","id","contactItem","delButton","onClick","ContactList","filterContacts","contactList","map","App","contacts","setContacts","filter","setFilter","useEffect","savedContact","JSON","parse","localStorage","getItem","prev","setItem","stringify","includes","container","data","shortid","require","generate","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.982d647c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterName_label__31xcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3LvWv\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\n\r\nconst ContactForm = ({ contact, onSubmit })=> {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n     \r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':  setName(e.target.value); break ;\r\n      case 'number': setNumber(e.target.value); break ;\r\n      default: return;\r\n    }\r\n        //  e.target.name === 'name'?  setName(e.target.value) :  setNumber(e.target.value)\r\n    };\r\n      \r\n  const onFormSubmit = e => {\r\n     e.preventDefault();\r\n     e.target.name === 'name'?  setName(e.target.value) :  setNumber(e.target.value)\r\n     if (contact.some(item => item.name.toLowerCase() === name.toLowerCase()))\r\n            return alert(`${name} is already in contacts`);\r\n        onSubmit({name, number})\r\n    };\r\n    \r\n        return(\r\n        <>\r\n         <form className={ s.form} onSubmit= {onFormSubmit}>\r\n    <label className={ s.label}>\r\n            Name\r\n            <input\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label className={ s.label}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n              pattern=\"\\+?\\d{(1, 4)}?[-.\\s]?\\(?\\d{(1, 3)}?\\)?[-.\\s]?\\d\r\n            {(1, 4)}[-.\\s]?\\d{(1, 4)}[-.\\s]?\\d{(1, 9)}\"\r\n              title=\"Номер телефона должен состоять цифр и\r\n            может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n                    <button className={ s.addButton} type=\"submit\">Add contact</button>\r\n        </form>\r\n\r\n            </>\r\n        )\r\n    \r\n};\r\nContactForm.propTypes = {\r\n  contact: PropTypes.array,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;","import s from '../FilterName/FilterName.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst FilterName = ({ value, onChange }) => {\r\n    return(\r\n        <>\r\n            <label className={ s.label}>\r\n          Find contacts by name\r\n                <input name='filter'\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            value={value}\r\n             onChange={onChange}\r\n                    \r\n          />\r\n    </label >\r\n         \r\n   </>\r\n    )\r\n};\r\nFilterName.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nexport default FilterName;","import s from '../ContactItem/ContactItem.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactItem = ({ name,  number, onDelete,id }) => {\r\n  return (\r\n\r\n        <>\r\n            <li className={s.contactItem} id={ id}>{name} {number}\r\n            <button className={ s.delButton} type='button' onClick={() => { onDelete(id) }}>Delete</button>\r\n           </li>\r\n            </>\r\n    )\r\n}\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\nexport default ContactItem;","import s from '../ContactsList/ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nconst ContactList = ({ filterContacts, onDelete }) => {\r\n    return (\r\n       \r\n        <ul className={s.contactList}>\r\n            {filterContacts.map(item => (\r\n            <ContactItem\r\n              key={item.id}\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n              id={item.id}\r\n            ></ContactItem>\r\n          ))}</ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default ContactList;","import { useEffect, useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport './App.css';\nimport FilterName from './components/FilterName';\nimport ContactList from './components/ContactsList/ContactsList';\nimport s from './components/data/data.module.css';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContact = JSON.parse(localStorage.getItem('keyContact'));\n    if (savedContact) setContacts(savedContact);\n  }, []);\n\n  useEffect(() => {\n    if (prev => prev !== contacts) {\n      localStorage.setItem('keyContact', JSON.stringify(contacts));\n    }\n  });\n\n  const handleSubmit = data => {\n    const shortid = require('shortid');\n    const contact = { id: shortid.generate(), ...data };\n    setContacts(prev => {\n      return [...prev, contact];\n    });\n  };\n\n  function filterName(e) {\n    e.preventDefault();\n    setFilter(e.currentTarget.value);\n  }\n\n  const filterArr = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const onDelete = id => {\n    setContacts(prev => prev.filter(item => item.id !== id));\n  };\n\n  const filterContacts = filterArr();\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} contact={contacts}></ContactForm>\n      <h2 className={s.title}>Contacts</h2>\n      <FilterName value={filter} onChange={filterName}></FilterName>\n      <ContactList filterContacts={filterContacts} onDelete={onDelete}></ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__wPOcD\",\"form\":\"ContactForm_form__1X4Om\",\"addButton\":\"ContactForm_addButton__3_VHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"data_container__3VGeV\",\"title\":\"data_title__1kPk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delButton\":\"ContactItem_delButton__LuOYK\",\"contactItem\":\"ContactItem_contactItem__1rtQp\"};"],"sourceRoot":""}